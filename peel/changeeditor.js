
//create helper methods up here and reference them below in options object.


// 'accept-icon': ,
// 'reject-icon': '<i class="fa fa-circle-o"></i>'



// Handlebars.registerHelper('if_eq', function(a, b, opts) {
//     if (a == b) {
//         return opts.fn(this);
//     } else {
//         return opts.inverse(this);
//     }
// });

//TODO - refactor this into module pattern.

var formatData = function(data) {
    $.each(data.changes, function(i,change) {
        console.log('change'+change);
        change.summary = data.config.uidLabels[change.uid];
        change.formattedValues = [];
        $.each(change.values, function(i,value) {
            console.log('value'+value);
            change.formattedValues.push(
                {   value: value,
                    label:data.config.valueLabels[i]
                }
            );
        });
    });
};


var setChangeValue = function($icon,change,value) {
    var $item = $icon.parentsUntil('[data-change-id]');
    var changeId = $item.attr('data-change-id');
    var $input = $('[data-change-id="'+changeId+']"');
    $input.val(value);
    updateChangeValueStatus($item, change, value);
};


var updateChangeValueStatus = function($item, change, value) {
    // var index = $.inArray(change.values, value);
    //
    // if (index=-1) {
    //     $item.removeClass('change-rejected').addClass('change-override');
    // }
    // if (index==0) {
    //     $item.removeClass('change-rejected').removeClass('change-override');
    // }
    // if (index==1) {
    //     $item.addClass('change-rejected').removeClass('change-override');
    // }
};

var acceptChange = function() {
    alert('accepted');
};

var rejectChange = function() {
    alert('rejected');
}


var defaultOnChangeAdded = function($changeItem, options, change) {
    var $actions = $changeItem.find('.change-actions');
    $actions.find('.change-accept').click(function(e) { acceptChange(change) });
    $actions.find('.change-reject').click(function(e) { rejectChange(change) });
}

var editorShown = function($popover, options) {
    var callback = options.config.onChangeAdded ? options.config.onChangeAdded : defaultOnChangeAdded;
    var $content = $popover.data('bs.popover').tip().find('.popover-content');

    $content.find('.change-item').each(function(i) {
        callback($(this), options, options.changes[i]);
    })
};


$.widget( "wtw.changeEditor", {

    options: {
        // all data generated by server side comparison goes here.
        changes:[
            {type:'modify', uid: 767, values: ['blah','foo'], summary:'to-be-generated' },
            {type:'delete', uid: 397, values: ['bxxx','yyy'], summary:'to-be-generated' }
        ],

        // all view customization data goes here.
        config: {
            rejectIcon: '<i class="fa fa-circle-o"/>',
            acceptIcon: '<i class="fa fa-check-circle"/>',
            onChangeAdded:null,  //if null, uses default callback.
            uidSelectorTemplate: '[data-changeid="${uid}"]',
            open: true,
            expanded:false,
            trigger: 'click',
            title:'#title',
            content:'#content',
            header: 'Changes',
            valueLabels: ['broker', 'carrier'],
            uidLabels:{397:'Are you over 65?',767:'Expiry Date'},
        },
    },


    _create: function() {
        var options = this.options;
        var config = this.options.config;
        config.count = this.options.changes.length;
        var title = config.title;
        var content = config.content;
        formatData(this.options);

        this.element.addClass('change-editor');

        this.element.popover({
            placement: 'bottom',
            trigger: 'click',
            container:'body',
            html : true,
            title: function() {
                var template = Handlebars.compile($(title).html());
                return template(options);
            },
            content: function() {
                var template = Handlebars.compile($(content).html());
                 return template(options);
            }
        });
        this.element.on('shown.bs.popover', function() {
                editorShown($(this), options);
            });
        this.element.popover('show');
    },


    // trigger events when initialized, summary dialog expanded/collapsed.  change dialog shown/hidden.


    _scrollTo: function(change) {

    },

    _createChangeSummary: function(change) {

    },

    _createChange: function(change) {

    }
});


// var title =
//     " <div style='display:none'>" +
//         " <span class='fa-stack fa-lg'> {{change-icon}}" +
//             " <i class='fa fa-stack-1x' > <span class='badge'>12</span> </i>" +
//         " </span>" +
//         " <span>Changes</span> <span class='pull-right'>" +
//             " <button class='btn btn-circle btn-primary'> {{prev-icon}}</i> </button>" +
//             " <button class='btn btn-circle btn-primary'> {{next-icon}}</i> </button>" +
//         " </span>" +
//     "</div>";




// <div id='xxx-content' style='display:none'>
//     <div class="list-group">
//     <details class="list-group-item">
//     <summary>
//     <i class="fa fa-caret-up fa-2x" aria-hidden="true"></i>
//     <i class="fa fa-check-circle"></i>
//     <i class="fa fa-circle-o"></i>
//     <span>Fruit</span>
//     </summary>
//     <span>
//     <small>Apple</small>
//     <i class="fa fa-long-arrow-right"></i>
//     <small>Orange</small>
//     </span>
//     </details>
//     <details class="list-group-item rejected">
//     <summary>
//     <i class="fa fa-caret-up fa-2x" aria-hidden="true"></i>
//     <i class="fa fa-check-circle"></i>
//     <i class="fa fa-circle-o"></i>
//     <span>Are you over 18?</span>
// </summary>
// <span>
// <small>Yes</small>
// <i class="fa fa-long-arrow-right" aria-hidden="true"></i>
//     <small><No></No></small>
//     </span>
//     </details>
//     <details class="list-group-item">
//     <summary>
//     <i class="fa fa-minus-circle" aria-hidden="true"></i>
//     <i class="fa fa-check-circle"></i>
//     <i class="fa fa-circle-o"></i>
//     <span>Vehicle </span>
//     </summary>
//     <span><small>1999 Toyota Camry</small></span>
// </details>
// <details class="list-group-item">
//     <summary>
//     <i class="fa fa-plus-circle" aria-hidden="true"></i>
//     <i class="fa fa-check-circle"></i>
//     <i class="fa fa-circle-o"></i>
//     <span>Driver</span>
//     </summary>
//     <span class=""><small>John Smith</small></span>
// </details>
// </div>
// </div>

